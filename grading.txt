Marked by: Brian Lin (briankw.lin@mail.utoronto.ca)
Team: HereWeGoAgain
Total mark: 55/66

NOTES: Multiple commit messages missing first-letter capitalization.

**Git Usage**
Total Marks: 1/2.0
Correct usage of commit messages and changesets
[0/1.0] – All commit messages have their first sentence letter capitalized and are less than 50 characters long. For long commit messages please see this guide. Commit messages should also make sense and summarize the changeset well.
[1/1.0] – Each changeset should be contained within a specific feature (i.e. don’t commit a change which impacts multiple features, use 1 commit per feature implementation/change).

**Code Style**
Total Marks: 4/4.0
Appropriate usage of variable naming conventions (i.e. not pointless variable names like ‘var a = something’ in both microservices and routes/functions are all commented well
[1/1.0] – Appropriate usage of variable names in Song microservice
[1/1.0] – Appropriate usage of variable names in Profile microservice
[1/1.0] – Routes/functions are commented appropriately in the Song microservice
[1/1.0] – Routes/functions are commented appropriately in Profile microservice

**Automarker Output**
Running auto-marker
{'tahmid': [], 'shabaz': []}
{
    "Add Song with additional unexpected param, unexpected param: unexepectedParam: 12345": "Test Passed!",
    "Add Song with all invalid param keys, param keys: inValidSongName:songName1 invalidSongArtistFullName:songArtistFullName1 invalidSongAlbum:songAlbum": "Test Passed!",
    "Add Song with all valid paramaters, params: songName:songName1 songArtistFullName:songArtistFullName1 songAlbum:songAlbum": "Test Passed!",
    "Add Song with one mandatory missing paramater, missing param: songArtistFullName": "Test Passed!",
    "Calling /followFriend as non-existing userName 'user1' to follow user with userName 'tahmid'": "Test Passed!",
    "Calling /followFriend as userName 'user1' to follow a non-existing user with userName 'non-existing-user'": "Test Passed!",
    "Calling /followFriend as userName 'user1' to follow friend with userName 'ilir'": "Test Passed!",
    "Calling /followFriend as userName 'user1' to follow friend with userName 'shabaz'": "Test Passed!",
    "Calling /followFriend as userName 'user1' to follow friend with userName 'tahmid'": "Test Passed!",
    "Calling /followFriend with missing param 'friendUserName'": "Test Passed!",
    "Calling /getAllFriendFavouriteSongTitles to get songs of user with userName 'user1' friends likes": "Test Passed!",
    "Calling /unfollowFriend as userName 'user1' to unfollow friend with userName 'shabaz'": "Test Passed!",
    "Calling rount /profile with missing params 'fullName'": "Test Passed!",
    "Calling route /profile to add user with userName 'user1'": "Test Passed!",
    "Checking DB to check if all nodes remains as expected after creating user": "Test failed! Some node(s) did not match the expected result.",
    "Checking DB to check if all nodes remains as expected after follow": "Test failed! Some node(s) did not match the expected result.",
    "Checking DB to check if all nodes remains as expected after unfollow": "Test failed! Some node(s) did not match the expected result.",
    "Checking DB to see if user 'user1' was correctly followed users with userNames 'ilir', 'tahmid' and 'shabaz'": "Test Passed!",
    "Checking DB to see if user 'user1' was correctly unfollowed users with userNames 'shabaz'": "Test Passed!",
    "Checking DB to see if user1 actually liked songId 5d620f54d78b833e34e65b46 and 5d620f54d78b833e34e65b47": "Test Failed! DB data does not match expected data",
    "Checking DB to see if user1 actually unliked songId 5d620f54d78b833e34e65b46 and 5d620f54d78b833e34e65b47": "Test Passed!",
    "Checking if the follow was one directional. Only 'user1' followed 'ilir' and not the other way around": "Test Passed!",
    "Checking if the unfollow was one directional. Only 'user1' unfollowed 'shabaz' and not the other way around": "Test Passed!",
    "Checking returned data after calling /getAllFriendFavouriteSongTitles": "Test Passed!",
    "Decrementing favourites count below 0 for a valid songId, id=5fe2abfc79698a07cd981426": "Test Passed!",
    "Decrementing favourites count for a songId that does not exist, id=000000000000000000000000": "Test Passed!",
    "Decrementing favourites count for a valid songId, id=5d61728193528481fe5a3122": "Test Passed!",
    "Deleting song by id that does not exist in the DB, id=000000000000000000000000": "Test Passed!",
    "Deleting song by id that exists in the DB, id=5d61728193528481fe5a3122": "Test Passed!",
    "Getting song by id that does not exist in the DB, id=000000000000000000000000": "Test Passed!",
    "Getting song by id that exists in the DB, id=5fe2abfc79698a07cd981425": "Test Passed!",
    "Getting song title by id that does not exist in the DB, id=000000000000000000000000": "Test Passed!",
    "Getting song title by id that exists in the DB, id=5d61728193528481fe5a3122": "Test Passed!",
    "Incrementing favourites count for a songId that does not exist, id=000000000000000000000000": "Test Passed!",
    "Incrementing favourites count for a songId which exists, but providing invalid ?shouldDecrement param, ?shouldDecrement=gibberish!, songId=5d61728193528481fe5a3122": "Test Passed!",
    "Incrementing favourites count for a valid songId id=5d61728193528481fe5a3122": "Test Passed!",
    "calling /getAllFriendFavouriteSongTitles to get songs user with userName 'ilir' likes'": "Test Passed!",
    "calling /likesong with user1 to like songId 5d620f54d78b833e34e65b46 to see if correct response type is returned": "Test Passed!",
    "calling /likesong with user1 to like songId 5d620f54d78b833e34e65b47 to see if correct response type is returned": "Test Passed!",
    "calling /unlikeSong with user1 to unlike songId 5d620f54d78b833e34e65b46": "Test Passed!",
    "calling /unlikeSong with user1 to unlike songId 5d620f54d78b833e34e65b47": "Test Passed!",
    "checking song 5d620f54d78b833e34e65b46 in DB to see if the favorite counter is decremented by 1": "Test Passed!",
    "checking song DB to see if the favorite counter is decremented for songId 5d620f54d78b833e34e65b47": "Test Passed!",
    "checking song DB to see if the favorite counter is incremented for song with id: 5d620f54d78b833e34e65b46": "Test Passed!",
    "checking song DB to see if the favorite counter is incremented for songId 5d620f54d78b833e34e65b47": "Test Passed!"
}
totalGrade: 50.0/60.0